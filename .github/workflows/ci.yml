name: ci

on:
  push:
    branches:
    - main
    tags:
    - v*
    paths-ignore:
    - docs/**
    - LICENSE
    - '**.md'
  pull_request:
    branches:
    - main
    paths-ignore:
    - docs/**
    - LICENSE
    - '**.md'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  server:

    name: "Server"
    runs-on: windows-latest

    env:
      BUILD_CONFIGURATION: "Release"

    defaults:
      run:
        working-directory: server

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Version
      shell: bash
      run: |
        dotnet tool install --global minver-cli --version 2.4.0
        version=$(minver --minimum-major-minor 1.0 --tag-prefix server-)
        echo "MINVERVERSIONOVERRIDE=$version" >> $GITHUB_ENV

    - name: Clean
      run: |
        dotnet clean --configuration ${{ env.BUILD_CONFIGURATION }}
        dotnet nuget locals all --clear

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

    - name: Test
      run: dotnet test test/NTurbo.Tests --configuration ${{ env.BUILD_CONFIGURATION }} --no-build

    - name: Package
      run: dotnet pack src/NTurbo/ --configuration ${{ env.BUILD_CONFIGURATION }} --no-build
      env:
        MINVERBUILDMETADATA: ${{ env.GITHUB_RUN_NUMBER }}

    - name: Publish package to NuGet
      if: startsWith(github.ref, 'refs/tags/server-')
      run: dotnet nuget push src\NTurbo\bin\${{ env.BUILD_CONFIGURATION }}\*.nupkg --api-key ${env:NUGET_TOKEN} --source https://api.nuget.org/v3/index.json
      env:
        NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}

  client:

    name: "Client"
    runs-on: windows-latest

    defaults:
      run:
        working-directory: client

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Version
      shell: bash
      run: |
        dotnet tool install --global minver-cli --version 2.4.0
        version=$(minver --minimum-major-minor 1.0 --tag-prefix client-)
        npm version $version

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build
